name: Build and Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build for macOS and Linux (x86_64 and aarch64)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker (Linux only)
        if: runner.os == 'Linux'
        run: |
          curl -fsSL https://get.docker.com | sh
          sudo usermod -aG docker $USER
          newgrp docker
          sudo systemctl start docker  # Ensure Docker service is started
          sudo systemctl enable docker

      - name: Install Docker Desktop (macOS only)
        if: runner.os == 'macOS'
        uses: docker-practice/actions-setup-docker-desktop@v2
        with:
          password: ${{ secrets.MACOS_PASSWORD }}  # Add macOS runner password secret

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal

      - name: Install Cross for cross-compilation
        run: cargo install cross

      - name: Build dynamic library
        run: cross build --release --lib --target ${{ matrix.target }}
        env:
          CARGO_INCREMENTAL: 0

      - name: Build binary
        run: cross build --release --bin dockpack --target ${{ matrix.target }}
        env:
          CARGO_INCREMENTAL: 0

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dockpack-${{ matrix.os }}-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/libdockpack.*  # Dynamic libraries (.dylib for macOS, .so for Linux)
            target/${{ matrix.target }}/release/dockpack*      # Binary executable
